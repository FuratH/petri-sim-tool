name: CI

on: [push]

jobs:
  test:
    name: Cypress Test
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      packages: write


    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run API in background
        working-directory: backend
        run: |
          npm install
          npm start &
        env:
          PORT: 8000
          
          
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cypress install
        working-directory: frontend
        run: npm install --legacy-peer-deps
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          working-directory: frontend
          install: false
          build: npm run build
          start: npm start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          
  build-images:
    name: Build and publish 
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    # Log into github registry    
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin  
    # Check out the repo    
    - name: Checkout
      uses: actions/checkout@v2
    # Build the images    
    - name: Build the docker-compose stack  
      run: docker-compose -f docker-compose.yml build
    # List images
    - name: List images
      run: docker images
    # Push images
    - name: Push images
      run: docker-compose -f docker-compose.yml push --ignore-push-failures


